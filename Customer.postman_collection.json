{
	"info": {
		"_postman_id": "fee66afb-83d8-4f39-a90d-ccf7434a2d91",
		"name": "Customer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Success', function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    //parse the response JSON and test three properties\r",
							"    const responseJson = pm.response.json();\r",
							"    if (responseJson.length > 0) {\r",
							"        pm.expect(responseJson).to.be.an('array');\r",
							"        responseJson.forEach(item => {\r",
							"            pm.expect(item).to.have.property('id');\r",
							"            pm.expect(item).to.have.property('firstName');\r",
							"            pm.expect(item).to.have.property('lastName');\r",
							"            pm.expect(item).to.have.property('point');\r",
							"            pm.expect(item.id).to.be.a('number');\r",
							"            pm.expect(item.firstName).to.be.a('string');\r",
							"            pm.expect(item.lastName).to.be.a('string');\r",
							"            pm.expect(item.point).to.be.a('number');\r",
							"        })\r",
							"    } else {\r",
							"        pm.expect(responseJson).to.be.an('object');\r",
							"        pm.expect(responseJson).to.have.property('id');\r",
							"        pm.expect(responseJson).to.have.property('firstName');\r",
							"        pm.expect(responseJson).to.have.property('lastName');\r",
							"        pm.expect(responseJson).to.have.property('point');\r",
							"        pm.expect(responseJson.id).to.be.a('number');\r",
							"        pm.expect(responseJson.firstName).to.be.a('string');\r",
							"        pm.expect(responseJson.lastName).to.be.a('string');\r",
							"        pm.expect(responseJson.point).to.be.a('number');\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7061/Customer",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7061",
					"path": [
						"Customer"
					]
				}
			},
			"response": []
		},
		{
			"name": "create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest('https://localhost:7061/Customer', (error, response) => {\r",
							"    if (error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"    const responseJson = response.json()\r",
							"    pm.collectionVariables.set('length', responseJson.length)\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest('https://localhost:7061/Customer', (error, response) => {\r",
							"    if (error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"\r",
							"    pm.test('customer list should be increase', () => {\r",
							"        const responseJson = response.json()\r",
							"        pm.expect(responseJson.length).to.equal(pm.collectionVariables.get(\"length\") + 1);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"FirstName\": \"dd\",\r\n    \"LastName\": \"d\",\r\n    \"Point\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7061/Customer",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7061",
					"path": [
						"Customer"
					]
				}
			},
			"response": []
		},
		{
			"name": "update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Success', function () {\r",
							"    pm.response.to.have.status(204)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 3,\r\n    \"FirstName\": \"adasds\",\r\n    \"LastName\": \"asdas\",\r\n    \"Point\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7061/Customer/3",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7061",
					"path": [
						"Customer",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EarnPoint",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let userId = 1\r",
							"let addingPoint = 10\r",
							" \r",
							"pm.collectionVariables.set(\"userId\", userId)\r",
							"pm.collectionVariables.set(\"addingPoint\", addingPoint)\r",
							"\r",
							"pm.sendRequest(`https://localhost:7061/Customer/${userId}`, (error, response) => {\r",
							"    if (error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"\r",
							"    const responseJson = response.json()\r",
							"    pm.collectionVariables.set(\"oldPoint\", responseJson.point)\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let userId = pm.collectionVariables.get(\"userId\")\r",
							"let oldPoint = pm.collectionVariables.get(\"oldPoint\")\r",
							"let addingPoint = pm.collectionVariables.get(\"addingPoint\")\r",
							"\r",
							"pm.sendRequest(`https://localhost:7061/Customer/${userId}`, (error, response) => {\r",
							"    if (error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"\r",
							"    pm.test('customer point should be increase', () => {\r",
							"        const responseJson = response.json()\r",
							"        pm.expect(responseJson.point).to.equal(oldPoint + addingPoint);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Id\": {{userId}},\r\n    \"Point\": {{addingPoint}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7061/Customer/EarnPoint",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7061",
					"path": [
						"Customer",
						"EarnPoint"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest('https://localhost:7061/Customer', (error, response) => {\r",
							"    if (error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"\r",
							"    pm.test('customer list should be decrease', () => {\r",
							"        const responseJson = response.json()\r",
							"        pm.expect(responseJson.length).to.equal(pm.collectionVariables.get(\"length\") - 1);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest('https://localhost:7061/Customer', (error, response) => {\r",
							"    if (error) {\r",
							"        console.log(error);\r",
							"    }\r",
							"    const responseJson = response.json()\r",
							"    pm.collectionVariables.set('length', responseJson.length)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:7061/Customer/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7061",
					"path": [
						"Customer",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "length",
			"value": ""
		},
		{
			"key": "point",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "addingPoint",
			"value": ""
		},
		{
			"key": "oldPoint",
			"value": ""
		}
	]
}